geom_boxplot(fill = "#FF8C00", alpha = 0.7, outlier.color = "black") +
labs(
title = "Distribución del puntaje SIMCE por Dependencia Administrativa",
x = "Dependencia del establecimiento",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
ggplot(data_simce_ive_ok, aes(
x = factor(cod_depe2,
levels = 1:4,
labels = c("Municipal",
"Particular subvencionado",
"Particular pagado",
"Servicio Local de Educación")),
y = prom_lect4b_rbd)) +
geom_boxplot(fill = "#FF8C00", alpha = 0.7, outlier.color = "black") +
labs(
title = "Distribución del puntaje SIMCE por Dependencia Administrativa",
x = "Dependencia del establecimiento",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
table(data_simce_ive_ok$cod_depe2, useNA = "ifany")
# Seleccionar las variables necesarias desde IVE
ive_simple <- ive_data %>%
select(id_rbd, ive_2023)
# 2. Unir con la base simce_ok
data_simce_ive <- left_join(simce_ok, ive_simple, by = c("rbd" = "id_rbd"))
data_simce_ive <- data_simce_ive %>%
mutate(ive_2023 = if_else(cod_depe2 == 3 & is.na(ive_2023), 0, ive_2023))
data_simce_ive_ok <- data_simce_ive %>%
drop_na(prom_lect4b_rbd, cod_grupo, palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd, palu_eda_ade_lect4b_rbd)
# Confirmar tamaño final
nrow(data_simce_ive_ok)
# Se selecciona la variable IVE
ive_simple <- ive_data %>%
select(id_rbd, ive_2023)
# Se une a la base Simce
data_simce_ive <- left_join(simce_ok, ive_simple, by = c("rbd" = "id_rbd"))
# Se asigna 0 IVE a los colegios particulares pagados
data_simce_ive <- data_simce_ive %>%
mutate(ive_2023 = if_else(cod_depe2 == 3 & is.na(ive_2023), 0, ive_2023))
# Se limpian los NA
data_simce_ive_ok <- data_simce_ive %>%
drop_na(prom_lect4b_rbd, cod_grupo, palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd, palu_eda_ade_lect4b_rbd)
nrow(data_simce_ive_ok)
# Histograma con densidad
ggplot(data_simce_ive_ok, aes(x = prom_lect4b_rbd)) +
geom_histogram(aes(y = ..density..), binwidth = 5, fill = "#69b3a2", color = "white", alpha = 0.7) +
geom_density(color = "darkblue", size = 1) +
labs(
title = "Distribución del puntaje promedio en lectura (SIMCE 4° Básico)",
x = "Puntaje promedio lectura SIMCE",
y = "Densidad"
) +
theme_minimal()
# Boxplot con etiquetas de GSE
ggplot(data_simce_ive_ok, aes(
x = factor(cod_grupo,
levels = 1:5,
labels = c("Bajo", "Medio bajo", "Medio", "Medio alto", "Alto")),
y = prom_lect4b_rbd)) +
geom_boxplot(fill = "#4682B4", alpha = 0.7, outlier.color = "red") +
labs(
title = "Distribución del puntaje SIMCE por Grupo Socioeconómico (GSE)",
x = "Grupo Socioeconómico",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
table(data_simce_ive_ok$cod_depe2, useNA = "ifany")
ggplot(data_simce_ive_ok, aes(
x = factor(cod_depe2,
levels = 1:4,
labels = c("Municipal",
"Particular subvencionado",
"Particular pagado",
"Servicio Local de Educación")),
y = prom_lect4b_rbd)) +
geom_boxplot(fill = "#FF8C00", alpha = 0.7, outlier.color = "black") +
labs(
title = "Distribución del puntaje SIMCE por Dependencia Administrativa",
x = "Dependencia del establecimiento",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
table(data_simce_ive_ok$cod_depe2, useNA = "ifany")
ggplot(data_simce_ive_ok, aes(
x = factor(cod_depe2,
levels = 1:4,
labels = c("Municipal",
"Particular subvencionado",
"Particular pagado",
"Servicio Local de Educación")),
y = prom_lect4b_rbd)) +
geom_boxplot(fill = "#FF8C00", alpha = 0.7, outlier.color = "black") +
labs(
title = "Distribución del puntaje SIMCE por Dependencia Administrativa",
x = "Dependencia del establecimiento",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar (IVE) y puntaje SIMCE",
x = "IVE-SINAE 2023",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar (IVE) y puntaje lectura SIMCE",
x = "IVE 2023",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
install.packages("scales")
install.packages("scales")
library(scales)
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar (IVE) y puntaje SIMCE",
x = "IVE-SINAE 2023 (%)",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
library(scales)
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar (IVE) y puntaje SIMCE",
x = "IVE-SINAE 2023 (%)",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
library(scales)
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar y el puntaje en Lectura Simce",
x = "IVE 2023 (%)",
y = "Puntaje promedio lectura SIMCE"
) +
theme_minimal()
library(scales)
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar y el puntaje en Lectura 4°Básico",
x = "IVE 2023 (%)",
y = "Puntaje promedio lectura SIMCE 4°Básico 2023"
) +
theme_minimal()
table(data_simce_ive_ok$cod_depe2, useNA = "ifany")
ggplot(data_simce_ive_ok, aes(
x = factor(cod_depe2,
levels = 1:4,
labels = c("Municipal",
"Particular subvencionado",
"Particular pagado",
"Servicio Local de Educación")),
y = prom_lect4b_rbd)) +
geom_boxplot(fill = "#FF8C00", alpha = 0.7, outlier.color = "black") +
labs(
title = "Distribución del puntaje SIMCE Lectura por Dependencia Administrativa",
x = "Dependencia del establecimiento",
y = "Puntaje promedio lectura SIMCE 4°Básico 2023"
) +
theme_minimal()
# Histograma con densidad
ggplot(data_simce_ive_ok, aes(x = prom_lect4b_rbd)) +
geom_histogram(aes(y = ..density..), binwidth = 5, fill = "#69b3a2", color = "white", alpha = 0.7) +
geom_density(color = "darkblue", size = 1) +
labs(
title = "Distribución del puntaje promedio en lectura (SIMCE 2023 4° Básico)",
x = "Puntaje promedio lectura SIMCE",
y = "Densidad"
) +
theme_minimal()
table(data_simce_ive_ok$cod_depe2, useNA = "ifany")
ggplot(data_simce_ive_ok, aes(
x = factor(cod_depe2,
levels = 1:4,
labels = c("Municipal",
"Particular subvencionado",
"Particular pagado",
"Servicio Local de Educación")),
y = prom_lect4b_rbd)) +
geom_boxplot(fill = "#FF8C00", alpha = 0.7, outlier.color = "black") +
labs(
title = "Distribución del puntaje en Lectura por Dependencia Administrativa",
x = "Dependencia",
y = "Puntaje promedio en lectura 4° Básico del establecimiento"
) +
theme_minimal()
library(scales)
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar y el puntaje en Lectura 4°Básico",
x = "IVE del establecimiento 2023 (%)",
y = "Puntaje promedio lectura del establecimiento"
) +
theme_minimal()
library(scales)
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar y el puntaje en Lectura 4°Básico",
x = "IVE del establecimiento 2023 (%)",
y = "Puntaje en SIMCE lectura del establecimiento"
) +
theme_minimal()
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
library(here)
ruta <- here("simce4b2023_rbd_público_final.xlsx")
simce_data <- readxl::read_excel(ruta) %>%
clean_names()
invisible(head(simce_data))
invisible(glimpse(simce_data))
invisible(skim(simce_data))
# Se crea un nuevo data frame con las variables relevantes
simce_ok <- simce_data %>%
select(rbd, cod_depe2, cod_grupo, cod_rural_rbd, prom_lect4b_rbd,
palu_eda_ins_lect4b_rbd, palu_eda_ele_lect4b_rbd, palu_eda_ade_lect4b_rbd)
invisible(head(simce_ok))
invisible(glimpse(simce_ok))
library(readxl)
ive_data <- read_excel(here("IVE_2023.xlsx")) %>%
clean_names()
estructura_ive <- glimpse(ive_data)
# Se selecciona la variable IVE
ive_simple <- ive_data %>%
select(id_rbd, ive_2023)
# Se une a la base Simce
data_simce_ive <- left_join(simce_ok, ive_simple, by = c("rbd" = "id_rbd"))
# Se asigna 0 IVE a los colegios particulares pagados
data_simce_ive <- data_simce_ive %>%
mutate(ive_2023 = if_else(cod_depe2 == 3 & is.na(ive_2023), 0, ive_2023))
# Se limpian los NA
data_simce_ive_ok <- data_simce_ive %>%
drop_na(prom_lect4b_rbd, cod_grupo, palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd, palu_eda_ade_lect4b_rbd)
nrow(data_simce_ive_ok)
# Histograma con densidad
ggplot(data_simce_ive_ok, aes(x = prom_lect4b_rbd)) +
geom_histogram(aes(y = ..density..), binwidth = 5, fill = "#69b3a2", color = "white", alpha = 0.7) +
geom_density(color = "darkblue", size = 1) +
labs(
title = "Distribución del puntaje promedio en lectura (SIMCE 2023 4° Básico)",
x = "Puntaje promedio lectura SIMCE",
y = "Densidad"
) +
theme_minimal()
# Boxplot con etiquetas de GSE
ggplot(data_simce_ive_ok, aes(
x = factor(cod_grupo,
levels = 1:5,
labels = c("Bajo", "Medio bajo", "Medio", "Medio alto", "Alto")),
y = prom_lect4b_rbd)) +
geom_boxplot(fill = "#4682B4", alpha = 0.7, outlier.color = "red") +
labs(
title = "Distribución del puntaje en Lectura SIMCE por Grupo Socioeconómico (GSE)",
x = "Grupo Socioeconómico",
y = "Puntaje promedio lectura"
) +
theme_minimal()
table(data_simce_ive_ok$cod_depe2, useNA = "ifany")
ggplot(data_simce_ive_ok, aes(
x = factor(cod_depe2,
levels = 1:4,
labels = c("Municipal",
"Particular subvencionado",
"Particular pagado",
"Servicio Local de Educación")),
y = prom_lect4b_rbd)) +
geom_boxplot(fill = "#FF8C00", alpha = 0.7, outlier.color = "black") +
labs(
title = "Distribución del puntaje en Lectura por Dependencia Administrativa",
x = "Dependencia",
y = "Puntaje promedio en lectura 4° Básico del establecimiento"
) +
theme_minimal()
library(scales)
ggplot(data_simce_ive_ok, aes(x = ive_2023, y = prom_lect4b_rbd)) +
geom_point(alpha = 0.3, color = "#2E86C1") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(
title = "Relación entre Índice de Vulnerabilidad Escolar y el puntaje en Lectura 4°Básico",
x = "IVE del establecimiento 2023 (%)",
y = "Puntaje en SIMCE lectura del establecimiento"
) +
theme_minimal()
# Transformar variables a numéricas
data_simce_ive_ok <- data_simce_ive_ok %>%
mutate(across(c(palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd,
palu_eda_ade_lect4b_rbd), as.numeric))
# Calcular porcentajes promedio nacional
promedios_estandares <- data_simce_ive_ok %>%
summarise(
Insuficiente = mean(palu_eda_ins_lect4b_rbd, na.rm = TRUE),
Elemental = mean(palu_eda_ele_lect4b_rbd, na.rm = TRUE),
Adecuado = mean(palu_eda_ade_lect4b_rbd, na.rm = TRUE)
) %>%
pivot_longer(everything(), names_to = "Estandar", values_to = "Porcentaje")
# Gráfico de barras apiladas
ggplot(promedios_estandares, aes(x = "", y = Porcentaje, fill = Estandar)) +
geom_bar(stat = "identity", width = 0.6) +
coord_flip() +
scale_fill_manual(values = c("#D9534F", "#F0AD4E", "#5CB85C")) +
labs(
title = "Distribución promedio nacional del desempeño SIMCE en Lectura",
x = "",
y = "Porcentaje promedio",
fill = "Estándar de logro"
) +
theme_minimal()
library(tidyverse)
install.packages(c("tidyverse", "readr", "janitor", "skimr"))
install.packages(c("tidyverse", "readr", "janitor", "skimr"))
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
install.packages("scales")
install.packages("scales")
data_simce_ive_ok <- data_simce_ive_ok %>%
mutate(across(c(palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd,
palu_eda_ade_lect4b_rbd), as.numeric))
# Preparar los datos en formato largo
data_estandares_long <- data_simce_ive_ok %>%
pivot_longer(cols = c(palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd,
palu_eda_ade_lect4b_rbd),
names_to = "estandar",
values_to = "porcentaje") %>%
mutate(estandar = case_when(
estandar == "palu_eda_ins_lect4b_rbd" ~ "Insuficiente",
estandar == "palu_eda_ele_lect4b_rbd" ~ "Elemental",
estandar == "palu_eda_ade_lect4b_rbd" ~ "Adecuado"
))
# Gráfico de relación con suavizado
ggplot(data_estandares_long, aes(x = ive_2023, y = porcentaje, color = estandar)) +
geom_smooth(method = "loess", se = FALSE) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(
title = "Niveles de desempeño en lectura según IVE-SINAE",
x = "Índice de Vulnerabilidad Escolar (IVE)",
y = "Porcentaje de estudiantes",
color = "Estándar de logro"
) +
theme_minimal()
data_simce_ive_ok <- data_simce_ive_ok %>%
mutate(across(c(palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd,
palu_eda_ade_lect4b_rbd), as.numeric))
# Datos en formato largo
data_estandares_long <- data_simce_ive_ok %>%
pivot_longer(cols = c(palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd,
palu_eda_ade_lect4b_rbd),
names_to = "estandar",
values_to = "porcentaje") %>%
mutate(estandar = case_when(
estandar == "palu_eda_ins_lect4b_rbd" ~ "Insuficiente",
estandar == "palu_eda_ele_lect4b_rbd" ~ "Elemental",
estandar == "palu_eda_ade_lect4b_rbd" ~ "Adecuado"
))
# Se realiza gráfico de relación
ggplot(data_estandares_long, aes(x = ive_2023, y = porcentaje, color = estandar)) +
geom_smooth(method = "loess", se = FALSE) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(
title = "Niveles de desempeño en lectura según IVE",
x = "Índice de Vulnerabilidad Escolar (IVE)",
y = "Porcentaje de estudiantes por estándar de logro",
color = "Estándar de logro"
) +
theme_minimal()
data_simce_ive_ok <- data_simce_ive_ok %>%
mutate(across(c(palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd,
palu_eda_ade_lect4b_rbd), as.numeric))
# Datos en formato largo
data_estandares_long <- data_simce_ive_ok %>%
pivot_longer(cols = c(palu_eda_ins_lect4b_rbd,
palu_eda_ele_lect4b_rbd,
palu_eda_ade_lect4b_rbd),
names_to = "estandar",
values_to = "porcentaje") %>%
mutate(estandar = case_when(
estandar == "palu_eda_ins_lect4b_rbd" ~ "Insuficiente",
estandar == "palu_eda_ele_lect4b_rbd" ~ "Elemental",
estandar == "palu_eda_ade_lect4b_rbd" ~ "Adecuado"
))
# Se realiza gráfico de relación
ggplot(data_estandares_long, aes(x = ive_2023, y = porcentaje, color = estandar)) +
geom_smooth(method = "loess", se = FALSE) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(
title = "Niveles de desempeño en lectura según IVE",
x = "Índice de Vulnerabilidad Escolar (IVE)",
y = "Porcentaje de estudiantes por estándar de logro",
color = "Estándar de logro"
) +
theme_minimal()
install.packages("rpart")
install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
# Modelo de árbol de regresión
set.seed(123)  # Para reproducibilidad
arbol_simce <- rpart(prom_lect4b_rbd ~ cod_depe2 + cod_grupo + cod_rural_rbd + ive_2023,
data = data_simce_ive_ok,
method = "anova")
# Visualización del árbol
rpart.plot(arbol_simce,
type = 2,
extra = 101,
fallen.leaves = TRUE,
box.palette = "RdYlGn",
shadow.col = "gray",
nn = TRUE,
main = "Árbol de regresión - Puntaje SIMCE Lectura")
# Modelo de árbol de regresión
set.seed(123)  # se estsable esta semilla para reproducibilidad de los resultados
arbol_simce <- rpart(prom_lect4b_rbd ~ cod_depe2 + cod_grupo + cod_rural_rbd + ive_2023,
data = data_simce_ive_ok,
method = "anova")
# Visualización del árbol
rpart.plot(arbol_simce,
type = 2,
extra = 101,
fallen.leaves = TRUE,
box.palette = "RdYlGn",
shadow.col = "gray",
nn = TRUE,
main = "Árbol de regresión - Puntaje SIMCE Lectura")
library(rpart)
library(rpart.plot)
set.seed(123)  # Para reproducibilidad
arbol_simce <- rpart(prom_lect4b_rbd ~ cod_depe2 + cod_grupo + cod_rural_rbd + ive_2023,
data = data_simce_ive_ok,
method = "anova")
rpart.plot(arbol_simce,
type = 2,
extra = 101,
fallen.leaves = TRUE,
box.palette = "RdYlGn",
shadow.col = "gray",
nn = TRUE,
main = "Árbol de regresión - Puntaje SIMCE Lectura")
# Modelo de árbol de regresión
set.seed(123)  # se estsable esta semilla para reproducibilidad de los resultados
arbol_simce <- rpart(prom_lect4b_rbd ~ cod_depe2 + cod_grupo + cod_rural_rbd + ive_2023,
data = data_simce_ive_ok,
method = "anova")
# Visualización del árbol
rpart.plot(arbol_simce,
type = 2,
extra = 101,
fallen.leaves = TRUE,
box.palette = "RdYlGn",
shadow.col = "gray",
nn = TRUE,
main = "Árbol de regresión - Puntaje SIMCE Lectura")
install.packages("randomForest")
library(randomForest)
set.seed(123)
# Modelo Random Forest
rf_simce <- randomForest(prom_lect4b_rbd ~ cod_depe2 + cod_grupo + cod_rural_rbd + ive_2023,
data = data_simce_ive_ok,
importance = TRUE,
ntree = 500)
# Ver resumen del modelo
print(rf_simce)
# Evaluar importancia de variables
importance(rf_simce)
# Gráfico importancia de variables
varImpPlot(rf_simce, main = "Importancia variables - Random Forest SIMCE Lectura")
# Predicciones del modelo Random Forest
pred_rf <- predict(rf_simce, data_simce_ive_ok)
# R²
r2_rf <- cor(pred_rf, data_simce_ive_ok$prom_lect4b_rbd)^2
r2_rf
# RMSE
rmse_rf <- sqrt(mean((pred_rf - data_simce_ive_ok$prom_lect4b_rbd)^2))
rmse_rf
